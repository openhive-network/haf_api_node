#
# Homepage and endpoints of the API "HAF Block Explorer".
#
worker_processes  5;
error_log /dev/stdout info;
worker_rlimit_nofile 8192;

events {
  worker_connections 4096;
}

http {
    access_log /dev/stdout;
    # Initialize Lua and load functions here
    init_by_lua_block {
        -- Base64 encoding function
        local b = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'

        function enc(data)
            return ((data:gsub('.', function(x) 
                local r, b = '', x:byte()
                for i = 8, 1, -1 do 
                    r = r .. (b % 2^i - b % 2^(i - 1) > 0 and '1' or '0') 
                end
                return r
            end)..'0000'):gsub('%d%d%d?%d?%d?%d?', function(x)
                if (#x < 6) then return '' end
                local c = 0
                for i = 1, 6 do 
                    c = c + (x:sub(i, i) == '1' and 2^(6 - i) or 0) 
                end
                return b:sub(c + 1, c + 1)
            end)..({ '', '==', '=' })[#data % 3 + 1])
        end

        -- Process path filters
        function process_path_filters(args)
            local path_filters = {}
            
            for path_filter in args:gmatch("path%-filter=([^&]*)") do
                table.insert(path_filters, enc(ngx.unescape_uri(path_filter)))
            end
            if #path_filters > 0 then
                return "{" .. table.concat(path_filters, ",") .. "}"
            else
                return "{}"
            end
        end
    }

    server {
        listen 0.0.0.0:80 default_server;
        server_name _;

        location / {
            # Set the path_filters variable
            set_by_lua_block $path_filters {
                local args = ngx.var.args or ""
                return process_path_filters(args)
            }

            # Modify args to remove path-filters
            set_by_lua_block $args {
                local args = ngx.var.args or ""
                return args:gsub("&?path%-filter=[^&]*", "")
            }

            # Include rewrite rules after setting variables
            include rewrite_rules.conf;
            rewrite_log on;

            proxy_pass  http://hafah-postgrest:3000;  # my PostREST is  here!

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_hide_header Content-Location;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
        }
    }
}
