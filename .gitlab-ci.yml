stages:
  - build
  - replay
  - test
  - cleanup

variables:
  # Variables required by Common CI jobs
  CI_COMMON_JOB_VERSION: "a3e97d90268154fae7933ea98e50e3c1c7c72d43"
  DOCKER_BUILDER_TAG: "$CI_COMMON_JOB_VERSION"
  DOCKER_DIND_TAG: "$CI_COMMON_JOB_VERSION"
  IMAGE_REMOVER_TAG: "$CI_COMMON_JOB_VERSION"

  # Git configuration
  GIT_STRATEGY: clone
  GIT_SUBMODULE_STRATEGY: recursive

  # Replay confioguration
  HIVE_API_NODE_VERSION: 1.27.5
  HAF_VERSION: ${HIVE_API_NODE_VERSION}rc9
  HIVEMIND_INSTANCE_VERSION: ${HIVE_API_NODE_VERSION}rc9
  HAFAH_VERSION: ${HIVE_API_NODE_VERSION}rc9
  BLOCK_LOG_SOURCE_DIR: "/blockchain/block_log_5m"
  REPLAY_DIRECTORY_PREFIX: "/cache/replay_data_haf_api_node"
  REPLAY_DIRECTORY: "${REPLAY_DIRECTORY_PREFIX}_${CI_COMMIT_SHORT_SHA}_${HAF_VERSION}_${HIVEMIND_INSTANCE_VERSION}_${HAFAH_VERSION}"
  REPLAY_PIPELINE_DIRECTORY: "${REPLAY_DIRECTORY_PREFIX}_${CI_PIPELINE_ID}"
  DOCKER_TLS_CERTDIR: "${REPLAY_PIPELINE_DIRECTORY}_certs"

include:
  - template: Workflows/Branch-Pipelines.gitlab-ci.yml
  - project: hive/common-ci-configuration
    ref: a3e97d90268154fae7933ea98e50e3c1c7c72d43
    file:
      - /templates/docker_image_jobs.gitlab-ci.yml
      - /templates/cache_cleanup.gitlab-ci.yml
  - local: ci/node-replay.gitlab-ci.yml

######## Templates ########

.rules:
  rules:
    - if: $CI_PIPELINE_TRIGGERED
      when: never
    - if: $CI_PIPELINE_SOURCE == "pipeline"
      when: never  
    - when: always

######## End templates ########

######## Build ########

docker-build:
  extends: 
    - .docker_image_builder_job_template
  stage: build
  variables:
    TAG: "${CI_COMMIT_SHORT_SHA}"
  before_script:
    - !reference [.docker_image_builder_job_template, before_script]
    - |
      echo -e "\e[0Ksection_start:$(date +%s):login[collapsed=true]\r\e[0KLogging to Docker registry..."
      docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
      echo -e "\e[0Ksection_end:$(date +%s):login\r\e[0K"
  script:
    - |
      echo -e "\e[0Ksection_start:$(date +%s):build[collapsed=true]\r\e[0KBaking Docker images..."
      function image-exists() {
        local image=$1
        docker manifest inspect "$image" > /dev/null
        return $?
      }
      if image-exists "${CI_REGISTRY_IMAGE}/compose:${TAG}" && image-exists "${CI_REGISTRY_IMAGE}/dind:${TAG}"
      then
          echo "Images ${CI_REGISTRY_IMAGE}/compose:${TAG} and ${CI_REGISTRY_IMAGE}/dind:${TAG} already exist. Skipping build..."
          exit 0
      fi
      docker buildx bake --file=docker-bake.hcl --provenance=false --progress="plain" "ci"
      echo -e "\e[0Ksection_end:$(date +%s):build\r\e[0K"
  tags:
    - public-runner-docker
    - hived-for-tests

######## End build ########

######## Replay ########

haf-node-replay:
  extends: 
    - .haf-node-replay
    - .rules
  stage: replay
  needs:
    - docker-build
  tags:
    - data-cache-storage

######## End replay ########

######## Test ########

# Creates a copy of replay data to be used in the tests
haf_api_node_replay_data_copy:
  extends: 
    - .haf_api_node_replay_data_copy
    - .rules
  stage: test
  needs:
    - haf-node-replay
  tags:
    - data-cache-storage

# Tests if HAF API node is working properly
haf_api_node_test:
  extends: 
    - .haf_api_node_test
    - .rules
  stage: test
  needs:
    - haf_api_node_replay_data_copy
  tags:
    - data-cache-storage

######## End test ########

######## Cleanup ########

# Deletes replay data used by the tests and created by haf_api_node_replay_data_copy
cleanup_haf_api_node_pipeline_cache:
  needs:
    - haf_api_node_replay_data_copy
    - haf_api_node_test
  extends: 
    - .cleanup_cache_manual_template
    - .rules
  stage: cleanup
  variables:
    CLEANUP_PATH_PATTERN: "${REPLAY_PIPELINE_DIRECTORY}*"
  when: always
  tags:
    - data-cache-storage

# Deletes all HAF API node replay data
cleanup_haf_api_node_cache_manual:
  extends: 
    - .cleanup_cache_manual_template
    - .rules
  stage: cleanup
  variables:
    CLEANUP_PATH_PATTERN: "${REPLAY_DIRECTORY_PREFIX}*"
  tags:
    - data-cache-storage

# Deletes HAF API node replay data older than 7 days
cleanup_old_haf_api_node_cache:
  extends:
    - .cleanup_old_cache_template
    - .rules
  stage: cleanup
  variables:
    CLEANUP_PATH_PATTERN: "${REPLAY_DIRECTORY_PREFIX}*"
  tags:
    - data-cache-storage

######## End cleanup ########